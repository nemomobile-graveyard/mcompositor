# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.26
# 

Name:       meegotouch-compositor

# >> macros
# << macros

Summary:    MeeGo UI Compositing Window Manager
Version:    1.3.0
Release:    1
Group:      System/Desktop
License:    LGPLv2.1
URL:        http://github.com/nemomobile/mcompositor
Source0:    %{name}-%{version}.tar.bz2
Source1:    mcompositor.service
Source100:  meegotouch-compositor.yaml
Requires: systemd
Requires: systemd-user-session-targets
BuildRequires:  pkgconfig(QtDBus)
BuildRequires:  pkgconfig(QtNetwork)
BuildRequires:  pkgconfig(QtOpenGL)
BuildRequires:  pkgconfig(contextprovider-1.0)
BuildRequires:  pkgconfig(x11)
BuildRequires:  pkgconfig(x11-xcb)
BuildRequires:  pkgconfig(xcb) >= 1.6
BuildRequires:  pkgconfig(xcb-render)
BuildRequires:  pkgconfig(xcb-shape)
BuildRequires:  pkgconfig(xcomposite)
BuildRequires:  pkgconfig(xdamage)
BuildRequires:  pkgconfig(xext)
BuildRequires:  pkgconfig(xrender)
BuildRequires:  pkgconfig(xrandr)
BuildRequires:  pkgconfig(xi)
BuildRequires:  pkgconfig(mce)
BuildRequires:  pkgconfig(systemd)
BuildRequires:  doxygen
Provides:   duicompositor >= 0.3.9
Provides:   mcompositor >= 0.4.6
Obsoletes:   duicompositor < 0.3.9
Obsoletes:   mcompositor < 0.4.6

%description
This package contains the Nemo Mobile compositing window manager.


%package devel
Summary:    Development files for building mcompositor decorators
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description devel
This package contains the files necessary to develop
mcompositor decorators.


%package tools
Summary:    Tools for debugging and interacting with mcompositor
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description tools
This package contains tools to interact with mcompositor.


%package tests
Summary:    Test files for mcompositor
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description tests
This package contains the files necessary to develop
mcompositor decorators.


%prep
%setup -q -n %{name}-%{version}

# >> setup
# << setup

%build
# >> build pre
# << build pre

%qmake 

make %{?jobs:-j%jobs}

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%qmake_install
mkdir -p %{buildroot}%{_libdir}/systemd/user/
cp -a %{SOURCE1} %{buildroot}%{_libdir}/systemd/user/

mkdir -p %{buildroot}%{_libdir}/systemd/user/user-session.target.wants  
ln -s ../contactsd.service %{buildroot}%{_libdir}/systemd/user/user-session.target.wants/

%post
if [ "$1" -ge 1 ]; then
systemctl-user daemon-reload || :
systemctl-user restart mcompositor.service || :
fi

%postun
if [ "$1" -eq 0 ]; then
systemctl-user stop mcompositor.service || :
systemctl-user daemon-reload || :
fi

# >> install post
# << install post

%post -p /sbin/ldconfig

%postun -p /sbin/ldconfig

%files
%defattr(-,root,root,-)
%{_bindir}/mcompositor
%{_bindir}/mdecorator
%{_libdir}/libdecorator.so.*
%{_libdir}/libmcompositor.so.*
%{_datadir}/contextkit/providers/org.maemo.mcompositor.context
%{_datadir}/translations/recovery.qm
%{_libdir}/systemd/user/mcompositor.service

# >> files
%{_libdir}/systemd/user/user-session.target.wants/mcompositor.service
# << files

%files devel
%defattr(-,root,root,-)
%{_libdir}/libdecorator.so
%{_libdir}/libmcompositor.so
%{_includedir}/meegotouch/libdecorator/*.h
%{_includedir}/meegotouch/mcompositor/*.h
%{_datadir}/doc/mcompositor-l10n-engineering-english/recovery.ts
%{_datadir}/doc/mcompositor/api/*
# >> files devel
# << files devel

%files tools
%defattr(-,root,root,-)
%{_bindir}/focus-tracker
%{_bindir}/windowctl
%{_bindir}/windowstack
%{_bindir}/manual-splash
# >> files tools
# << files tools

%files tests
%defattr(-,root,root,-)
%{_libdir}/mcompositor-unit-tests/ut_*
%{_datadir}/mcompositor-functional-tests/splash.jpg
%{_datadir}/mcompositor-unit-tests/tests.xml
%{_bindir}/mcompositor-test-init.py
%{_datadir}/mcompositor-functional-tests/tests.xml
%{_datadir}/meegotouch/testscripts/mcompositor-functional-tests/test*.py
%{_datadir}/meegotouch/testscripts/mcompositor-functional-tests/test*.sh
# >> files tests
# << files tests
